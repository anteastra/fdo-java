
// inStream - объект класса PipedInputStream
try {
   while(true) {
   byte[] readedBytes = null;
   synchronized(inStream) {
      int bytesAvailable = inStream.available();
      readedBytes = new byte[bytesAvailable];
      inStream.read(readedBytes);
   }
   // обработка полученных данных из readedBytes
   // …
} catch(IOException e) {

/* IOException будет брошено, когда поток inStream, либо 
связанный с ним PipedOutputStream, уже закрыт, и при этом 
производится попытка считывания из inStream */

System.out.println("работа с потоком inStream завершена");
} 
